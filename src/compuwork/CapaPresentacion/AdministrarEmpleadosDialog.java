/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package compuwork.CapaPresentacion;

import javax.swing.ImageIcon;
import compuwork.Empleado;
import compuwork.Permanente;
import compuwork.Temporal;
import compuwork.Departamento;
import compuwork.Empresa;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import javax.swing.JOptionPane;

public class AdministrarEmpleadosDialog extends javax.swing.JDialog {

    /**
     * Creates new form adminstrarEmpleados
     */
    private Empresa empresa;
    private DefaultTableModel modeloTabla;

    public AdministrarEmpleadosDialog(java.awt.Frame parent, boolean modal, Empresa empresa) {
        super(parent, modal);
        this.empresa = empresa;
        initComponents();
        this.setLocationRelativeTo(null);
        configurarTabla();  // Llama al método que llenará la tabla

        try {
            this.setIconImage(new ImageIcon(getClass().getResource("/compuwork/Images/empresa.png")).getImage());
        } catch (Exception e) {
            System.out.println("Error al cargar la imagen");
        }

    }

    private void configurarTabla() {
        modeloTabla = new DefaultTableModel();
        modeloTabla.setColumnIdentifiers(new Object[]{
            "ID", "Nombre", "Tipo", "Cargo/Supervisor", "Departamento"
        });

        tablaEmpleados.setModel(modeloTabla);
        cargarEmpleados();
    }

    private void cargarEmpleados() {
        modeloTabla.setRowCount(0); // Limpia tabla actual

        ArrayList<Empleado> empleados = empresa.getTodosLosEmpleados();

        for (Empleado emp : empleados) {
            String tipo = (emp instanceof Permanente) ? "Permanente" : "Temporal";
            String datoExtra = (emp instanceof Permanente p)
                    ? p.getCargo()
                    : ((Temporal) emp).getSupervisor();

            String nombreDepto = (emp.getDepartamento() != null)
                    ? emp.getDepartamento().getNombre()
                    : "Sin asignar";

            modeloTabla.addRow(new Object[]{
                emp.getId(),
                emp.getNombre(),
                tipo,
                datoExtra,
                nombreDepto
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblNombreEmpresa = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaEmpleados = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(42, 118, 167));

        lblNombreEmpresa.setFont(new java.awt.Font("Nirmala Text", 1, 18)); // NOI18N
        lblNombreEmpresa.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombreEmpresa.setText("ADMINISTRAR EMPLEADOS");
        lblNombreEmpresa.setAlignmentY(0.0F);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(189, 189, 189)
                .addComponent(lblNombreEmpresa)
                .addContainerGap(121, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNombreEmpresa)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        tablaEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablaEmpleados);

        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCerrar.setText("CERRAR");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(btnAgregar)
                .addGap(51, 51, 51)
                .addComponent(btnEditar)
                .addGap(48, 48, 48)
                .addComponent(btnEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCerrar)
                .addGap(35, 35, 35))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnEditar)
                    .addComponent(btnEliminar)
                    .addComponent(btnCerrar))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        // TODO add your handling code here:

        dispose();

    }//GEN-LAST:event_btnCerrarActionPerformed

    public void actualizarTabla() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Nombre");
        modelo.addColumn("Tipo");
        modelo.addColumn("Cargo/Supervisor");
        modelo.addColumn("Departamento");

        for (Departamento d : empresa.getDepartamentos()) {
            for (Empleado e : d.getListaEmpleados()) {
                String tipo = e instanceof Permanente ? "Permanente" : "Temporal";
                String cargoSupervisor = "";

                if (e instanceof Permanente) {
                    cargoSupervisor = ((Permanente) e).getCargo();
                } else if (e instanceof Temporal) {
                    cargoSupervisor = ((Temporal) e).getSupervisor();
                }

                Object[] fila = {
                    e.getId(),
                    e.getNombre(),
                    tipo,
                    cargoSupervisor,
                    d.getNombre()
                };

                modelo.addRow(fila);
            }
        }

        tablaEmpleados.setModel(modelo);
    }

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:

        String[] opciones = {"Permanente", "Temporal"};
        int seleccion = JOptionPane.showOptionDialog(
                this,
                "¿Qué tipo de empleado desea agregar?",
                "Tipo de Empleado",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                opciones,
                opciones[0]
        );

        if (seleccion == 0) {
            // Usuario seleccionó "Permanente"
            AgregarPermanente dialog = new AgregarPermanente(this, true, empresa);
            dialog.setVisible(true);
            actualizarTabla();
        } else if (seleccion == 1) {
            // Usuario seleccionó "Temporal"

        }

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = tablaEmpleados.getSelectedRow();

        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un empleado para editar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Obtener ID desde la tabla (suponiendo que la columna 0 es el ID)
        int idEmpleado = (int) tablaEmpleados.getValueAt(filaSeleccionada, 0);

        // Buscar el departamento al que pertenece el empleado
        for (Departamento d : empresa.getDepartamentos()) {
            for (Empleado emp : d.getListaEmpleados()) {
                if (emp.getId() == idEmpleado && emp instanceof Permanente) {
                    Permanente permanente = (Permanente) emp;

                    // Abrir el JDialog de edición
                    AgregarPermanente dialog = new AgregarPermanente(this, true, permanente, empresa);
                    dialog.setVisible(true);

                    actualizarTabla(); // Vuelve a cargar la tabla
                    return;
                }
            }
        }

        JOptionPane.showMessageDialog(this, "Solo se pueden editar empleados permanentes por ahora.");


    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = tablaEmpleados.getSelectedRow();

        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un empleado para eliminar.");
            return;
        }

        // Obtener el ID del empleado desde la tabla (asumiendo que está en la primera columna)
        int idEmpleado = (int) tablaEmpleados.getValueAt(filaSeleccionada, 0);

        // Buscar el empleado y su departamento
        Empleado empleadoAEliminar = empresa.buscarEmpleadoPorId(idEmpleado);

        if (empleadoAEliminar == null) {
            JOptionPane.showMessageDialog(this, "No se encontró el empleado.");
            return;
        }

        Departamento departamento = empleadoAEliminar.getDepartamento();

        int opcion = JOptionPane.showConfirmDialog(this, "¿Está seguro que desea eliminar al empleado?",
                "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

        if (opcion == JOptionPane.YES_OPTION) {
            departamento.eliminarEmpleado(empleadoAEliminar);
            JOptionPane.showMessageDialog(this, "Empleado eliminado exitosamente.");
            actualizarTabla(); // Refrescar la tabla
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblNombreEmpresa;
    private javax.swing.JTable tablaEmpleados;
    // End of variables declaration//GEN-END:variables
}
